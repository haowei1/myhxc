package com.hdy.myhxc.mapper;

import com.hdy.myhxc.model.User;
import com.hdy.myhxc.model.UserExample.Criteria;
import com.hdy.myhxc.model.UserExample.Criterion;
import com.hdy.myhxc.model.UserExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class UserSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Fri Aug 23 16:23:24 CST 2019
     */
    public String countByExample(UserExample example) {
        SQL sql = new SQL();
        sql.SELECT("count(*)").FROM("m_user");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Fri Aug 23 16:23:24 CST 2019
     */
    public String deleteByExample(UserExample example) {
        SQL sql = new SQL();
        sql.DELETE_FROM("m_user");
        applyWhere(sql, example, false);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Fri Aug 23 16:23:24 CST 2019
     */
    public String insertSelective(User record) {
        SQL sql = new SQL();
        sql.INSERT_INTO("m_user");
        
        if (record.getUuid() != null) {
            sql.VALUES("UUID", "#{uuid,jdbcType=VARCHAR}");
        }
        
        if (record.getUserCode() != null) {
            sql.VALUES("User_Code", "#{userCode,jdbcType=VARCHAR}");
        }
        
        if (record.getUserPsd() != null) {
            sql.VALUES("User_Psd", "#{userPsd,jdbcType=VARCHAR}");
        }
        
        if (record.getUserDep() != null) {
            sql.VALUES("User_Dep", "#{userDep,jdbcType=VARCHAR}");
        }
        
        if (record.getUserDepnm() != null) {
            sql.VALUES("User_DepNM", "#{userDepnm,jdbcType=VARCHAR}");
        }
        
        if (record.getUserNm() != null) {
            sql.VALUES("User_NM", "#{userNm,jdbcType=VARCHAR}");
        }
        
        if (record.getUserGender() != null) {
            sql.VALUES("User_Gender", "#{userGender,jdbcType=VARCHAR}");
        }
        
        if (record.getUserTel() != null) {
            sql.VALUES("User_Tel", "#{userTel,jdbcType=VARCHAR}");
        }
        
        if (record.getUserRole() != null) {
            sql.VALUES("User_Role", "#{userRole,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdatePwdt() != null) {
            sql.VALUES("Update_PWDT", "#{updatePwdt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIsconstructionunit() != null) {
            sql.VALUES("IsConstructionUnit", "#{isconstructionunit,jdbcType=VARCHAR}");
        }
        
        if (record.getIsroadpatrol() != null) {
            sql.VALUES("IsRoadPatrol", "#{isroadpatrol,jdbcType=VARCHAR}");
        }
        
        if (record.getIsdesignatedcu() != null) {
            sql.VALUES("IsDesignatedCU", "#{isdesignatedcu,jdbcType=VARCHAR}");
        }
        
        if (record.getIsendtask() != null) {
            sql.VALUES("IsEndTask", "#{isendtask,jdbcType=VARCHAR}");
        }
        
        if (record.getHandheldDevice() != null) {
            sql.VALUES("Handheld_Device", "#{handheldDevice,jdbcType=VARCHAR}");
        }
        
        if (record.getJgregisterId() != null) {
            sql.VALUES("JGRegister_ID", "#{jgregisterId,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateUser() != null) {
            sql.VALUES("Create_User", "#{createUser,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            sql.VALUES("Create_Date", "#{createDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUser() != null) {
            sql.VALUES("Update_User", "#{updateUser,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            sql.VALUES("Update_Date", "#{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDelfg() != null) {
            sql.VALUES("DelFg", "#{delfg,jdbcType=VARCHAR}");
        }
        
        if (record.getBeizhu() != null) {
            sql.VALUES("Beizhu", "#{beizhu,jdbcType=VARCHAR}");
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Fri Aug 23 16:23:24 CST 2019
     */
    public String selectByExample(UserExample example) {
        SQL sql = new SQL();
        if (example != null && example.isDistinct()) {
            sql.SELECT_DISTINCT("UUID");
        } else {
            sql.SELECT("UUID");
        }
        sql.SELECT("User_Code");
        sql.SELECT("User_Psd");
        sql.SELECT("User_Dep");
        sql.SELECT("User_DepNM");
        sql.SELECT("User_NM");
        sql.SELECT("User_Gender");
        sql.SELECT("User_Tel");
        sql.SELECT("User_Role");
        sql.SELECT("Update_PWDT");
        sql.SELECT("IsConstructionUnit");
        sql.SELECT("IsRoadPatrol");
        sql.SELECT("IsDesignatedCU");
        sql.SELECT("IsEndTask");
        sql.SELECT("Handheld_Device");
        sql.SELECT("JGRegister_ID");
        sql.SELECT("Create_User");
        sql.SELECT("Create_Date");
        sql.SELECT("Update_User");
        sql.SELECT("Update_Date");
        sql.SELECT("DelFg");
        sql.SELECT("Beizhu");
        sql.FROM("m_user");
        applyWhere(sql, example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            sql.ORDER_BY(example.getOrderByClause());
        }
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Fri Aug 23 16:23:24 CST 2019
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        User record = (User) parameter.get("record");
        UserExample example = (UserExample) parameter.get("example");
        
        SQL sql = new SQL();
        sql.UPDATE("m_user");
        
        if (record.getUuid() != null) {
            sql.SET("UUID = #{record.uuid,jdbcType=VARCHAR}");
        }
        
        if (record.getUserCode() != null) {
            sql.SET("User_Code = #{record.userCode,jdbcType=VARCHAR}");
        }
        
        if (record.getUserPsd() != null) {
            sql.SET("User_Psd = #{record.userPsd,jdbcType=VARCHAR}");
        }
        
        if (record.getUserDep() != null) {
            sql.SET("User_Dep = #{record.userDep,jdbcType=VARCHAR}");
        }
        
        if (record.getUserDepnm() != null) {
            sql.SET("User_DepNM = #{record.userDepnm,jdbcType=VARCHAR}");
        }
        
        if (record.getUserNm() != null) {
            sql.SET("User_NM = #{record.userNm,jdbcType=VARCHAR}");
        }
        
        if (record.getUserGender() != null) {
            sql.SET("User_Gender = #{record.userGender,jdbcType=VARCHAR}");
        }
        
        if (record.getUserTel() != null) {
            sql.SET("User_Tel = #{record.userTel,jdbcType=VARCHAR}");
        }
        
        if (record.getUserRole() != null) {
            sql.SET("User_Role = #{record.userRole,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdatePwdt() != null) {
            sql.SET("Update_PWDT = #{record.updatePwdt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIsconstructionunit() != null) {
            sql.SET("IsConstructionUnit = #{record.isconstructionunit,jdbcType=VARCHAR}");
        }
        
        if (record.getIsroadpatrol() != null) {
            sql.SET("IsRoadPatrol = #{record.isroadpatrol,jdbcType=VARCHAR}");
        }
        
        if (record.getIsdesignatedcu() != null) {
            sql.SET("IsDesignatedCU = #{record.isdesignatedcu,jdbcType=VARCHAR}");
        }
        
        if (record.getIsendtask() != null) {
            sql.SET("IsEndTask = #{record.isendtask,jdbcType=VARCHAR}");
        }
        
        if (record.getHandheldDevice() != null) {
            sql.SET("Handheld_Device = #{record.handheldDevice,jdbcType=VARCHAR}");
        }
        
        if (record.getJgregisterId() != null) {
            sql.SET("JGRegister_ID = #{record.jgregisterId,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateUser() != null) {
            sql.SET("Create_User = #{record.createUser,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            sql.SET("Create_Date = #{record.createDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUser() != null) {
            sql.SET("Update_User = #{record.updateUser,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            sql.SET("Update_Date = #{record.updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDelfg() != null) {
            sql.SET("DelFg = #{record.delfg,jdbcType=VARCHAR}");
        }
        
        if (record.getBeizhu() != null) {
            sql.SET("Beizhu = #{record.beizhu,jdbcType=VARCHAR}");
        }
        
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Fri Aug 23 16:23:24 CST 2019
     */
    public String updateByExample(Map<String, Object> parameter) {
        SQL sql = new SQL();
        sql.UPDATE("m_user");
        
        sql.SET("UUID = #{record.uuid,jdbcType=VARCHAR}");
        sql.SET("User_Code = #{record.userCode,jdbcType=VARCHAR}");
        sql.SET("User_Psd = #{record.userPsd,jdbcType=VARCHAR}");
        sql.SET("User_Dep = #{record.userDep,jdbcType=VARCHAR}");
        sql.SET("User_DepNM = #{record.userDepnm,jdbcType=VARCHAR}");
        sql.SET("User_NM = #{record.userNm,jdbcType=VARCHAR}");
        sql.SET("User_Gender = #{record.userGender,jdbcType=VARCHAR}");
        sql.SET("User_Tel = #{record.userTel,jdbcType=VARCHAR}");
        sql.SET("User_Role = #{record.userRole,jdbcType=VARCHAR}");
        sql.SET("Update_PWDT = #{record.updatePwdt,jdbcType=TIMESTAMP}");
        sql.SET("IsConstructionUnit = #{record.isconstructionunit,jdbcType=VARCHAR}");
        sql.SET("IsRoadPatrol = #{record.isroadpatrol,jdbcType=VARCHAR}");
        sql.SET("IsDesignatedCU = #{record.isdesignatedcu,jdbcType=VARCHAR}");
        sql.SET("IsEndTask = #{record.isendtask,jdbcType=VARCHAR}");
        sql.SET("Handheld_Device = #{record.handheldDevice,jdbcType=VARCHAR}");
        sql.SET("JGRegister_ID = #{record.jgregisterId,jdbcType=VARCHAR}");
        sql.SET("Create_User = #{record.createUser,jdbcType=VARCHAR}");
        sql.SET("Create_Date = #{record.createDate,jdbcType=TIMESTAMP}");
        sql.SET("Update_User = #{record.updateUser,jdbcType=VARCHAR}");
        sql.SET("Update_Date = #{record.updateDate,jdbcType=TIMESTAMP}");
        sql.SET("DelFg = #{record.delfg,jdbcType=VARCHAR}");
        sql.SET("Beizhu = #{record.beizhu,jdbcType=VARCHAR}");
        
        UserExample example = (UserExample) parameter.get("example");
        applyWhere(sql, example, true);
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Fri Aug 23 16:23:24 CST 2019
     */
    public String updateByPrimaryKeySelective(User record) {
        SQL sql = new SQL();
        sql.UPDATE("m_user");
        
        if (record.getUserCode() != null) {
            sql.SET("User_Code = #{userCode,jdbcType=VARCHAR}");
        }
        
        if (record.getUserPsd() != null) {
            sql.SET("User_Psd = #{userPsd,jdbcType=VARCHAR}");
        }
        
        if (record.getUserDep() != null) {
            sql.SET("User_Dep = #{userDep,jdbcType=VARCHAR}");
        }
        
        if (record.getUserDepnm() != null) {
            sql.SET("User_DepNM = #{userDepnm,jdbcType=VARCHAR}");
        }
        
        if (record.getUserNm() != null) {
            sql.SET("User_NM = #{userNm,jdbcType=VARCHAR}");
        }
        
        if (record.getUserGender() != null) {
            sql.SET("User_Gender = #{userGender,jdbcType=VARCHAR}");
        }
        
        if (record.getUserTel() != null) {
            sql.SET("User_Tel = #{userTel,jdbcType=VARCHAR}");
        }
        
        if (record.getUserRole() != null) {
            sql.SET("User_Role = #{userRole,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdatePwdt() != null) {
            sql.SET("Update_PWDT = #{updatePwdt,jdbcType=TIMESTAMP}");
        }
        
        if (record.getIsconstructionunit() != null) {
            sql.SET("IsConstructionUnit = #{isconstructionunit,jdbcType=VARCHAR}");
        }
        
        if (record.getIsroadpatrol() != null) {
            sql.SET("IsRoadPatrol = #{isroadpatrol,jdbcType=VARCHAR}");
        }
        
        if (record.getIsdesignatedcu() != null) {
            sql.SET("IsDesignatedCU = #{isdesignatedcu,jdbcType=VARCHAR}");
        }
        
        if (record.getIsendtask() != null) {
            sql.SET("IsEndTask = #{isendtask,jdbcType=VARCHAR}");
        }
        
        if (record.getHandheldDevice() != null) {
            sql.SET("Handheld_Device = #{handheldDevice,jdbcType=VARCHAR}");
        }
        
        if (record.getJgregisterId() != null) {
            sql.SET("JGRegister_ID = #{jgregisterId,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateUser() != null) {
            sql.SET("Create_User = #{createUser,jdbcType=VARCHAR}");
        }
        
        if (record.getCreateDate() != null) {
            sql.SET("Create_Date = #{createDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getUpdateUser() != null) {
            sql.SET("Update_User = #{updateUser,jdbcType=VARCHAR}");
        }
        
        if (record.getUpdateDate() != null) {
            sql.SET("Update_Date = #{updateDate,jdbcType=TIMESTAMP}");
        }
        
        if (record.getDelfg() != null) {
            sql.SET("DelFg = #{delfg,jdbcType=VARCHAR}");
        }
        
        if (record.getBeizhu() != null) {
            sql.SET("Beizhu = #{beizhu,jdbcType=VARCHAR}");
        }
        
        sql.WHERE("UUID = #{uuid,jdbcType=VARCHAR}");
        
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table m_user
     *
     * @mbg.generated Fri Aug 23 16:23:24 CST 2019
     */
    protected void applyWhere(SQL sql, UserExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            sql.WHERE(sb.toString());
        }
    }
}